version: '3.4'

services:
  # galactic_nvidia:
  #   image: ros_galactic_nvidia
  #   network_mode: "host" 
  #   privileged: true
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined   
  #   volumes:
  #     - /home/valentin/Crazyflie/ros2_ws/:/ros2_ws
  #     - /home/valentin/dockerfiles
  #   devices:
  #     - /dev:/dev
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile_galactic_nvidia
  #   command: /bin/sh -c "while sleep 1000; do :; done"     

  # noetic_nvidia:
  #   image: ros_noetic_nvidia
  #   network_mode: "host" 
  #   privileged: true
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined   
  #   volumes:
  #     - /home/valentin/Crazyflie/ros2_ws/:/ros2_ws
  #     - /home/valentin/dockerfiles
  #   devices:
  #     - /dev:/dev
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile_noetic_nvidia
  #   command: bash

  galactic_intel:
    image: ros_galactic_intel
    network_mode: "host" 
    privileged: true
    volumes:
      - /home/valentin/ros2_ws:/home/valentin/ros2_ws
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /home/valentin/.Xauthority:/home/valentin/.Xauthority
    devices:
      - "/dev:/dev"
    environment:
      - CC=/usr/bin/cc
      - CXX=/usr/bin/c++
      - DISPLAY=:0
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY=/home/valentin/.Xauthority
      - DOCKER_USER_NAME=valentin       # $(id -un)
      - DOCKER_USER_ID=1000             # $(id -u)
      - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
      - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
      - ROS_IP=127.0.0.1 
    build:
      context: .
      dockerfile: ./Dockerfile_galactic_intel
    # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined   
    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"   
# run this command: docker-compose --file compose.yaml up galactic_intel

  noetic_intel:
    image: ros_noetic_intel
    network_mode: "host" 
    privileged: true
    volumes:
      - /home/valentin/catkin_ws:/home/valentin/catkin_ws
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /home/valentin/.Xauthority:/home/valentin/.Xauthority
    devices:
      - "/dev:/dev"
    environment:
      - CC=/usr/bin/cc
      - CXX=/usr/bin/c++
      - DISPLAY=:0
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY=/home/valentin/.Xauthority
      - DOCKER_USER_NAME=valentin       # $(id -un)
      - DOCKER_USER_ID=1000             # $(id -u)
      - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
      - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
      - ROS_IP=127.0.0.1 
    build:
      context: .
      dockerfile: ./Dockerfile_noetic_intel
    # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined   
    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"
#run this command: docker-compose --file compose.yaml up noetic_intel
